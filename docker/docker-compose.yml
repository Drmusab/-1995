services:
  ai_assistant:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    image: ai_assistant:latest
    container_name: ai_assistant
    restart: unless-stopped
    ports:
      - "8000:8000"  # REST API
      - "8080:8080"  # Web UI
      - "50051:50051"  # gRPC
    volumes:
      - ai_data:/data
      - ../configs:/app/configs:ro
    env_file:
      - .env.production
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      vector_db:
        condition: service_started
    networks:
      - ai_network
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
        reservations:
          cpus: '1'
          memory: 2G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  redis:
    image: redis:7-alpine
    container_name: ai_assistant_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ai_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  postgres:
    image: postgres:15-alpine
    container_name: ai_assistant_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=ai_assistant
      - POSTGRES_PASSWORD=secure_password
      - POSTGRES_DB=ai_assistant
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ai_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ai_assistant"]
      interval: 10s
      timeout: 5s
      retries: 3

  vector_db:
    image: qdrant/qdrant:latest
    container_name: ai_assistant_vector_db
    restart: unless-stopped
    ports:
      - "6333:6333"
    volumes:
      - vector_db_data:/qdrant/storage
    networks:
      - ai_network

  monitoring:
    image: prom/prometheus:latest
    container_name: ai_assistant_monitoring
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ../infrastructure/monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - ai_network

networks:
  ai_network:
    driver: bridge

volumes:
  redis_data:
  postgres_data:
  vector_db_data:
  ai_data:
