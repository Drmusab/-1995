[metadata]
name = ai-assistant
version = 1.0.0
description = Advanced AI Assistant with multimodal processing, workflow orchestration, and extensible plugin system
long_description = file: README.md
long_description_content_type = text/markdown
author = Drmusab
author_email = drmusab@example.com
license = MIT
license_files = LICENSE
url = https://github.com/Drmusab/-1995
project_urls =
    Documentation = https://github.com/Drmusab/-1995/docs
    Bug Tracker = https://github.com/Drmusab/-1995/issues
    Source Code = https://github.com/Drmusab/-1995
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    License :: OSI Approved :: MIT License
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Topic :: Software Development :: Libraries :: Application Frameworks
    Operating System :: OS Independent
    Natural Language :: English
keywords =
    ai
    assistant
    nlp
    multimodal
    workflows
    plugins
    language-model
    speech
    vision

[options]
package_dir =
    = src
packages = find:
python_requires = >=3.10
zip_safe = False
include_package_data = True
install_requires =
    # Core dependencies - will be read from requirements/base.txt
    pyyaml>=6.0
    python-dotenv>=1.0.0
    pydantic>=2.0.0
    numpy>=1.24.0
    torch>=2.0.0
    asyncio>=3.4.3
    uvicorn>=0.22.0
    fastapi>=0.95.0
    sqlalchemy>=2.0.0
    alembic>=1.11.0
    redis>=4.5.0
    aiohttp>=3.8.0
    websockets>=11.0.0
    prometheus-client>=0.17.0
    opentelemetry-api>=1.18.0
    opentelemetry-sdk>=1.18.0
    structlog>=23.1.0

[options.packages.find]
where = src
exclude =
    tests
    tools
    docs
    examples
    *.tests
    *.tests.*
    tests.*
    tests.*.*

[options.package_data]
* = *.json, *.yaml, *.yml, *.md, *.txt

[options.entry_points]
console_scripts =
    ai-assistant = src.cli:main
    ai-assistant-server = src.main:main

[options.extras_require]
dev =
    # Will be read from requirements/development.txt
    black>=23.3.0
    isort>=5.12.0
    flake8>=6.0.0
    mypy>=1.3.0
    pytest>=7.3.0
    pytest-cov>=4.1.0
    pre-commit>=3.3.0
test =
    # Will be read from requirements/testing.txt
    pytest>=7.3.0
    pytest-cov>=4.1.0
    pytest-asyncio>=0.21.0
    pytest-xdist>=3.3.0
    pytest-benchmark>=4.0.0
    hypothesis>=6.81.0
docs =
    sphinx>=7.0.0
    sphinx-rtd-theme>=1.2.0
    sphinx-autodoc-typehints>=1.23.0
    sphinx-copybutton>=0.5.0
    sphinx-tabs>=3.4.0
all =
    %(dev)s
    %(test)s
    %(docs)s

[bdist_wheel]
universal = 0

[sdist]
formats = zip, gztar

[flake8]
max-line-length = 100
extend-ignore = E203, W503
exclude =
    .git,
    __pycache__,
    build,
    dist,
    .eggs,
    *.egg,
    venv,
    .venv,
    env,
    .env,
    docs/conf.py,
    setup.py,
    migrations
per-file-ignores =
    __init__.py:F401,F403
    src/assistant/core_engine.py:E501
    src/assistant/component_manager.py:E501
    src/assistant/workflow_orchestrator.py:E501
    src/assistant/interaction_handler.py:E501
    src/assistant/session_manager.py:E501
    src/assistant/plugin_manager.py:E501
    tests/*:E501,F811,F401
max-complexity = 15

[mypy]
python_version = 3.10
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
strict_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
plugins =
    pydantic.mypy

[mypy.plugins.pydantic.*]
init_forbid_extra = True
init_typed = True
warn_required_dynamic_aliases = True

[[mypy.overrides]]
module = [
    "tests.*",
    "docs.*",
]
disallow_untyped_defs = False
disallow_incomplete_defs = False

[[mypy.overrides]]
module = [
    "numpy.*",
    "torch.*",
    "scipy.*",
    "openai.*",
    "pytest.*",
    "setuptools.*",
    "redis.*",
    "sqlalchemy.*",
    "alembic.*",
    "aiohttp.*",
    "websockets.*",
    "prometheus_client.*",
    "opentelemetry.*",
]
ignore_missing_imports = True

[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
markers =
    unit: marks tests as unit tests
    integration: marks tests as integration tests
    e2e: marks tests as end-to-end tests
    slow: marks tests as slow
    smoke: marks basic smoke tests
    performance: marks performance tests
    security: marks security tests
    resilience: marks resilience and fault tolerance tests
addopts =
    --strict-markers
    --strict-config
    -v
    --doctest-modules
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
log_cli = True
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

[tool:isort]
profile = black
line_length = 100
known_first_party = src
known_third_party = numpy,torch,pytest,pydantic,sqlalchemy,redis,aiohttp,fastapi,alembic,openai,asyncio
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
ensure_newline_before_comments = True
skip_gitignore = True

[coverage:run]
source = src
omit =
    src/*/migrations/*
    tests/*
    docs/*
    tools/*
    setup.py
    conftest.py
    */__init__.py
    */types.py
    */constants.py
plugins =
    coverage_conditional_plugin
concurrency = multiprocessing,thread

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError
    except ImportError
precision = 2
show_missing = True
skip_covered = False

[coverage:html]
directory = htmlcov

[bandit]
exclude = tests,docs,tools
targets = src
skips = B101,B104,B303,B311,B105,B107,B108,B308,B106

[pylint]
max-line-length = 100
disable = C0111,R0903,C0103,C0303,C0330,R0902,R0914,R0912,R0913,R0915,R0201,W0212,C0111,C0103,C0301,W0621,W0613,W0201,W0612,W0611,W0703,W0622,W0702,C0326,W0511,R0801,C0200
ignore = migrations,tests
ignore-docstrings = yes
output-format = colorized
good-names = i,j,k,e,x,y,z,ex,_,id,db,df,fn,io,ip
extension-pkg-whitelist = numpy,torch,pydantic

[egg_info]
tag_build = 
tag_date = 0
